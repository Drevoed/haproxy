[ot-test-be]
    ot-tracer ot-test-tracer
        config /home/miron/CLionProjects/haproxy/2.4/alpine/be/cfg-zipkin.json
        plugin libzipkin_opentracing_plugin.so
        option dontlog-normal
        option hard-errors
        no option disabled
        rate-limit 100.0

        scopes client_session_start
        scopes frontend_tcp_request
        scopes http_wait_request
        scopes http_body_request
        scopes frontend_http_request
        scopes switching_rules_request
        scopes backend_tcp_request
        scopes backend_http_request
        scopes process_server_rules_request
        scopes http_process_request
        scopes tcp_rdp_cookie_request
        scopes process_sticking_rules_request
        scopes client_session_end
        scopes server_unavailable

        scopes server_session_start
        scopes tcp_response
        scopes http_wait_response
        scopes process_store_rules_response
        scopes server_session_end

    ot-scope http_after_response
        span "HAProxy response" child-of "HAProxy session"
            tag "error" bool(true)
            tag "http.status_code" status

    ot-scope client_session_start
        span "HAProxy session" root
            baggage "haproxy_id" var(txn.ot.uuid)
            inject "" use-headers
        span "Client session" child-of "HAProxy session"
        acl acl-test-src-ip src 127.0.0.1
        event on-client-session-start if acl-test-src-ip

    ot-scope frontend_tcp_request
        span "Frontend TCP request" child-of "Client session"
        event on-frontend-tcp-request

    ot-scope http_wait_request
        span "HTTP wait request" follows-from "Frontend TCP request"
        finish "Frontend TCP request"
        event on-http-wait-request

    ot-scope http_body_request
        span "HTTP body request" follows-from "HTTP wait request"
        finish "HTTP wait request"
        event on-http-body-request

    ot-scope frontend_http_request
        span "Frontend HTTP request" follows-from "HTTP body request"
            tag "http.method" method
            tag "http.url" url
            tag "http.version" str("HTTP/") req.ver
        finish "HTTP body request"
        event on-frontend-http-request

    ot-scope switching_rules_request
        span "Switching rules request" follows-from "Frontend HTTP request"
        finish "Frontend HTTP request"
        event on-switching-rules-request

    ot-scope backend_tcp_request
        span "Backend TCP request" follows-from "Switching rules request"
        finish "Switching rules request"
        event on-backend-tcp-request

    ot-scope backend_http_request
        span "Backend HTTP request" follows-from "Backend TCP request"
        finish "Backend TCP request"
        event on-backend-http-request

    ot-scope process_server_rules_request
        span "Process server rules request" follows-from "Backend HTTP request"
        finish "Backend HTTP request"
        event on-process-server-rules-request

    ot-scope http_process_request
        span "HTTP process request" follows-from "Process server rules request"
        finish "Process server rules request"
        event on-http-process-request

    ot-scope tcp_rdp_cookie_request
        span "TCP RDP cookie request" follows-from "HTTP process request"
        finish "HTTP process request"
        event on-tcp-rdp-cookie-request

    ot-scope process_sticking_rules_request
        span "Process sticking rules request" follows-from "TCP RDP cookie request"
        finish "TCP RDP cookie request"
        event on-process-sticking-rules-request

    ot-scope client_session_end
        finish "Client session"
        event on-client-session-end

    ot-scope server_unavailable
        finish *
        event on-server-unavailable

    ot-scope server_session_start
        span "Server session" child-of "HAProxy session"
        finish "Process sticking rules request"
        event on-server-session-start

    ot-scope tcp_response
        span "TCP response" child-of "Server session"
        event on-tcp-response

    ot-scope http_wait_response
        span "HTTP wait response" follows-from "TCP response"
        finish "TCP response"
        event on-http-wait-response

    ot-scope process_store_rules_response
        span "Process store rules response" follows-from "HTTP wait response"
        finish "HTTP wait response"
        event on-process-store-rules-response

    ot-scope server_session_end
        finish *
        event on-server-session-end
